初始化一个仓库，git init
添加文件到仓库，分两步
第一步，使用命令git add <file> ，可以反复提交多次，添加多个文件
第二部，使用git commit，完成
        git commit -m '提交说明，任意填写'

查看仓库状态 git status

查看文件具体做了那些修改 git diff readme.txt

版本回退  -- 时光穿梭
    git log     命令
    显示从最近到最远的提交日志，
    git log --pretty=oneline 查看简略日志信息

    git reset --hard HEAD^ 回退到上一个版本

    git reset --hard <commit id> 撤销回退，去往某个版本，哈哈哈

    git reflog 记录每一次的命令   重返未来


版本区

也就是隐藏目录 .git 这个是git的版本仓库
里面存了很多东西，最重要的就是stage 暂存区
还有第一个分支master 以及指向master的一个指针叫 HEAD

把文件往Git版本库里添加的时候，是分两步执行的

    第一步 用git add 把文件添加进去，实际上就是把文件修改添加到暂存区
    第二部 用git commit 提交更改， 实际上就是把暂存区所有内容提交到当前分支
            因为创建Git版本库时，Git自动为我们创建了唯一一个matser分支，所以
            git commit就是往master分之上提交更改

简单理解就是 需要提交的文件修通通放到暂存区， 然后一次性提交暂存区的所有修改


git checkout -- file 可以丢弃工作区的修改
    -- 没有 -- 就变成了 创建一个新分支

首先要关联一个远程库
使用命令    git remote add origin git@server-name:path/repo-name.git

例如
    远程库           SSH  git@github.com:alwaysquiet/learngit.git
    git remote add origin git@github.com:alwaysquiet/learngit.git

关联后 使用git push -u origin master 第一次推送master分支的所有内容

此后每次提交，只要有必要，就可以使用命令git push origin master推送最新修改

git push origin master 把本地master分支的最新修改推送至GitHub

分布式版本库


由于远程库是空的，我们第一次推送 master 分支时，加上了-u 参数，Git 不但会把本地的 master 分支内容推
送的远程新的 master 分支，还会把本地的 master 分支和远程的 master 分支关联起来，在以后的推送或者拉
取时就可以简化命令。



